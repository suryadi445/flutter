import * as vscode from "vscode";
import { RecentTaskTreeItem } from ".";
import { TaskTerminalsStore, RecentTasksStore, RootProjectsStore } from "../../stores";
import { GradleTaskProvider } from "../../tasks";
import { GradleClient } from "../../client";
import { Icons } from "../../icons";
export declare function getRecentTaskTreeItemMap(): Map<string, RecentTaskTreeItem>;
export declare class RecentTasksTreeDataProvider implements vscode.TreeDataProvider<vscode.TreeItem> {
    private readonly recentTasksStore;
    private readonly taskTerminalsStore;
    private readonly rootProjectsStore;
    private readonly gradleTaskProvider;
    private readonly client;
    private readonly icons;
    private readonly _onDidChangeTreeData;
    readonly onDidChangeTreeData: vscode.Event<vscode.TreeItem | null>;
    constructor(recentTasksStore: RecentTasksStore, taskTerminalsStore: TaskTerminalsStore, rootProjectsStore: RootProjectsStore, gradleTaskProvider: GradleTaskProvider, client: GradleClient, icons: Icons);
    private handleTerminalsStoreChange;
    getStore(): RecentTasksStore;
    getTreeItem(element: vscode.TreeItem): vscode.TreeItem;
    refresh(treeItem?: vscode.TreeItem | null): void;
    getParent(element: vscode.TreeItem): vscode.TreeItem | null;
    getChildren(element?: vscode.TreeItem): Promise<vscode.TreeItem[]>;
    private buildTreeItems;
}
