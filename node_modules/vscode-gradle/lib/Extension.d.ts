import * as vscode from "vscode";
import { Api } from "./api";
export declare class Extension {
    private readonly context;
    private readonly client;
    private readonly server;
    private readonly pinnedTasksStore;
    private readonly recentTasksStore;
    private readonly taskTerminalsStore;
    private readonly rootProjectsStore;
    private readonly gradleProjectContentProvider;
    private readonly gradleTaskProvider;
    private readonly gradleDependencyProvider;
    private readonly taskProvider;
    private readonly gradleTaskManager;
    private readonly icons;
    private readonly buildFileWatcher;
    private readonly gradleWrapperWatcher;
    private readonly gradleDaemonsTreeView;
    private readonly gradleTasksTreeView;
    private readonly gradleDaemonsTreeDataProvider;
    private readonly pinnedTasksTreeDataProvider;
    private readonly pinnedTasksTreeView;
    private readonly recentTasksTreeDataProvider;
    private readonly recentTasksTreeView;
    private readonly gradleTasksTreeDataProvider;
    private readonly defaultProjectsTreeView;
    private readonly defaultProjectsTreeDataProvider;
    private readonly api;
    private readonly commands;
    private readonly _onDidTerminalOpen;
    private readonly onDidTerminalOpen;
    private recentTerminal;
    constructor(context: vscode.ExtensionContext);
    private storeSubscriptions;
    private activate;
    private registerCommands;
    private handleTaskTerminals;
    private handleTaskEvents;
    private handleWatchEvents;
    private syncBuildFile;
    private restartServer;
    private refresh;
    private handleEditorEvents;
    getApi(): Api;
}
